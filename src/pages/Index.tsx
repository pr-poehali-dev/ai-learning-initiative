import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Progress } from '@/components/ui/progress'
import { Badge } from '@/components/ui/badge'
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
import Icon from '@/components/ui/icon'

const Index = () => {
  const [activeSection, setActiveSection] = useState('dashboard')

  const statsData = [
    { label: '–ö—É—Ä—Å—ã –ø—Ä–æ–π–¥–µ–Ω–æ', value: 12, total: 20, icon: 'BookOpen' },
    { label: '–ß–∞—Å–æ–≤ –æ–±—É—á–µ–Ω–∏—è', value: 48, total: 100, icon: 'Clock' },
    { label: '–ó–∞–¥–∞—á —Ä–µ—à–µ–Ω–æ', value: 156, total: 250, icon: 'CheckCircle' },
    { label: '–£—Ä–æ–≤–µ–Ω—å –ò–ò', value: 75, total: 100, icon: 'Brain' }
  ]

  const courses = [
    {
      title: '–û—Å–Ω–æ–≤—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è',
      description: '–ò–∑—É—á–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ ML –∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π',
      progress: 65,
      level: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
      duration: '8 —á–∞—Å–æ–≤',
      icon: 'Bot'
    },
    {
      title: '–ì–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
      description: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ deep learning –∏ CNN',
      progress: 30,
      level: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
      duration: '12 —á–∞—Å–æ–≤',
      icon: 'Network'
    },
    {
      title: 'NLP –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞',
      description: 'Natural Language Processing —Å Python',
      progress: 90,
      level: '–°—Ä–µ–¥–Ω–∏–π',
      duration: '6 —á–∞—Å–æ–≤',
      icon: 'MessageSquare'
    },
    {
      title: '–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ',
      description: '–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –ò–ò',
      progress: 0,
      level: '–°—Ä–µ–¥–Ω–∏–π',
      duration: '10 —á–∞—Å–æ–≤',
      icon: 'Eye'
    }
  ]

  const practiceProjects = [
    {
      title: '–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
      difficulty: '–õ–µ–≥–∫–æ',
      points: 100,
      completed: true
    },
    {
      title: '–ß–∞—Ç-–±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
      difficulty: '–°—Ä–µ–¥–Ω–µ',
      points: 250,
      completed: true
    },
    {
      title: '–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω',
      difficulty: '–°–ª–æ–∂–Ω–æ',
      points: 500,
      completed: false
    }
  ]

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
      {/* Header */}
      <header className="border-b bg-white/80 backdrop-blur-sm sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-gradient-to-r from-blue-600 to-cyan-400 rounded-xl flex items-center justify-center">
                <Icon name="Brain" size={24} className="text-white" />
              </div>
              <div>
                <h1 className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-cyan-400 bg-clip-text text-transparent">
                  AI –ê–∫–∞–¥–µ–º–∏—è
                </h1>
                <p className="text-sm text-muted-foreground">–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∏–∑—É—á–µ–Ω–∏—è –ò–ò</p>
              </div>
            </div>
            
            <nav className="hidden md:flex items-center space-x-6">
              {[
                { id: 'dashboard', label: '–î–∞—à–±–æ—Ä–¥', icon: 'BarChart3' },
                { id: 'courses', label: '–ö—É—Ä—Å—ã', icon: 'BookOpen' },
                { id: 'practice', label: '–ü—Ä–∞–∫—Ç–∏–∫–∞', icon: 'Code' },
                { id: 'profile', label: '–ü—Ä–æ—Ñ–∏–ª—å', icon: 'User' }
              ].map((item) => (
                <button
                  key={item.id}
                  onClick={() => setActiveSection(item.id)}
                  className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-all duration-200 ${
                    activeSection === item.id
                      ? 'bg-gradient-to-r from-blue-600 to-cyan-400 text-white shadow-lg'
                      : 'text-muted-foreground hover:text-foreground hover:bg-muted'
                  }`}
                >
                  <Icon name={item.icon as any} size={18} />
                  <span>{item.label}</span>
                </button>
              ))}
            </nav>

            <Button variant="outline" size="sm">
              <Icon name="Settings" size={16} className="mr-2" />
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </Button>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="container mx-auto px-4 py-8">
        {activeSection === 'dashboard' && (
          <div className="space-y-8 animate-fade-in">
            <div>
              <h2 className="text-3xl font-bold mb-2">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AI –ê–∫–∞–¥–µ–º–∏—é! üöÄ</h2>
              <p className="text-muted-foreground">–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞</p>
            </div>

            {/* Stats Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {statsData.map((stat, index) => (
                <Card key={index} className="hover:shadow-lg transition-all duration-200 animate-scale-in">
                  <CardContent className="p-6">
                    <div className="flex items-center justify-between mb-4">
                      <div className="w-12 h-12 bg-gradient-to-r from-blue-600 to-cyan-400 rounded-lg flex items-center justify-center">
                        <Icon name={stat.icon as any} size={24} className="text-white" />
                      </div>
                      <Badge variant="secondary">{Math.round((stat.value / stat.total) * 100)}%</Badge>
                    </div>
                    <div className="space-y-2">
                      <p className="text-sm font-medium text-muted-foreground">{stat.label}</p>
                      <p className="text-2xl font-bold">{stat.value}<span className="text-sm text-muted-foreground">/{stat.total}</span></p>
                      <Progress value={(stat.value / stat.total) * 100} className="h-2" />
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>

            {/* Recent Activity */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Icon name="Activity" size={20} />
                  <span>–ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {[
                    { action: '–ó–∞–≤–µ—Ä—à–µ–Ω —É—Ä–æ–∫ "–í–≤–µ–¥–µ–Ω–∏–µ –≤ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏"', time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥', type: 'course' },
                    { action: '–†–µ—à–µ–Ω–∞ –∑–∞–¥–∞—á–∞ –ø–æ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö', time: '5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥', type: 'practice' },
                    { action: '–ü–æ–ª—É—á–µ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç "–û—Å–Ω–æ–≤—ã ML"', time: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥', type: 'achievement' }
                  ].map((activity, index) => (
                    <div key={index} className="flex items-center space-x-3 p-3 rounded-lg bg-muted/50">
                      <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                        activity.type === 'course' ? 'bg-blue-100 text-blue-600' :
                        activity.type === 'practice' ? 'bg-green-100 text-green-600' :
                        'bg-yellow-100 text-yellow-600'
                      }`}>
                        <Icon name={
                          activity.type === 'course' ? 'BookOpen' :
                          activity.type === 'practice' ? 'Code' : 'Award'
                        } size={16} />
                      </div>
                      <div className="flex-1">
                        <p className="text-sm font-medium">{activity.action}</p>
                        <p className="text-xs text-muted-foreground">{activity.time}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )}

        {activeSection === 'courses' && (
          <div className="space-y-8 animate-fade-in">
            <div>
              <h2 className="text-3xl font-bold mb-2">–ö–∞—Ç–∞–ª–æ–≥ –∫—É—Ä—Å–æ–≤</h2>
              <p className="text-muted-foreground">–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞</p>
            </div>

            <Tabs defaultValue="all" className="w-full">
              <TabsList className="grid w-full grid-cols-4">
                <TabsTrigger value="all">–í—Å–µ –∫—É—Ä—Å—ã</TabsTrigger>
                <TabsTrigger value="beginner">–ù–∞—á–∏–Ω–∞—é—â–∏–π</TabsTrigger>
                <TabsTrigger value="intermediate">–°—Ä–µ–¥–Ω–∏–π</TabsTrigger>
                <TabsTrigger value="advanced">–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π</TabsTrigger>
              </TabsList>
              
              <TabsContent value="all" className="mt-6">
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {courses.map((course, index) => (
                    <Card key={index} className="hover:shadow-lg transition-all duration-200 group cursor-pointer">
                      <CardHeader>
                        <div className="flex items-center justify-between mb-2">
                          <div className="w-12 h-12 bg-gradient-to-r from-blue-600 to-cyan-400 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform">
                            <Icon name={course.icon as any} size={24} className="text-white" />
                          </div>
                          <Badge variant={course.level === '–ù–∞—á–∏–Ω–∞—é—â–∏–π' ? 'default' : course.level === '–°—Ä–µ–¥–Ω–∏–π' ? 'secondary' : 'destructive'}>
                            {course.level}
                          </Badge>
                        </div>
                        <CardTitle className="text-lg">{course.title}</CardTitle>
                        <CardDescription>{course.description}</CardDescription>
                      </CardHeader>
                      <CardContent>
                        <div className="space-y-4">
                          <div className="flex items-center justify-between text-sm text-muted-foreground">
                            <span className="flex items-center space-x-1">
                              <Icon name="Clock" size={14} />
                              <span>{course.duration}</span>
                            </span>
                            <span>{course.progress}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ</span>
                          </div>
                          <Progress value={course.progress} className="h-2" />
                          <Button className="w-full" variant={course.progress > 0 ? 'default' : 'outline'}>
                            {course.progress > 0 ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' : '–ù–∞—á–∞—Ç—å –∫—É—Ä—Å'}
                          </Button>
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </TabsContent>
            </Tabs>
          </div>
        )}

        {activeSection === 'practice' && (
          <div className="space-y-8 animate-fade-in">
            <div>
              <h2 className="text-3xl font-bold mb-2">–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è</h2>
              <p className="text-muted-foreground">–ü—Ä–∏–º–µ–Ω—è–π—Ç–µ –∑–Ω–∞–Ω–∏—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö</p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {practiceProjects.map((project, index) => (
                <Card key={index} className="hover:shadow-lg transition-all duration-200">
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <CardTitle className="text-lg">{project.title}</CardTitle>
                      {project.completed && (
                        <Icon name="CheckCircle" size={20} className="text-green-600" />
                      )}
                    </div>
                    <div className="flex items-center space-x-2">
                      <Badge variant={
                        project.difficulty === '–õ–µ–≥–∫–æ' ? 'default' :
                        project.difficulty === '–°—Ä–µ–¥–Ω–µ' ? 'secondary' : 'destructive'
                      }>
                        {project.difficulty}
                      </Badge>
                      <span className="text-sm text-muted-foreground">{project.points} –±–∞–ª–ª–æ–≤</span>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <Button className="w-full" variant={project.completed ? 'outline' : 'default'}>
                      {project.completed ? '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å' : '–ù–∞—á–∞—Ç—å'}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        )}

        {activeSection === 'profile' && (
          <div className="space-y-8 animate-fade-in">
            <div>
              <h2 className="text-3xl font-bold mb-2">–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
              <p className="text-muted-foreground">–í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</p>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
              <Card className="lg:col-span-2">
                <CardHeader>
                  <CardTitle>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="flex items-center space-x-4">
                    <div className="w-16 h-16 bg-gradient-to-r from-blue-600 to-cyan-400 rounded-full flex items-center justify-center">
                      <Icon name="User" size={32} className="text-white" />
                    </div>
                    <div>
                      <h3 className="text-xl font-semibold">–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ò–≤–∞–Ω–æ–≤</h3>
                      <p className="text-muted-foreground">AI —ç–Ω—Ç—É–∑–∏–∞—Å—Ç</p>
                      <p className="text-sm text-muted-foreground">–£—á–∞—Å—Ç–Ω–∏–∫ —Å —è–Ω–≤–∞—Ä—è 2024</p>
                    </div>
                  </div>
                  
                  <div className="pt-4 border-t">
                    <h4 className="font-semibold mb-2">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h4>
                    <div className="grid grid-cols-2 gap-4">
                      <div>
                        <p className="text-2xl font-bold">1250</p>
                        <p className="text-sm text-muted-foreground">–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥</p>
                      </div>
                      <div>
                        <p className="text-2xl font-bold">15</p>
                        <p className="text-sm text-muted-foreground">–°—Ç—Ä–∏–∫ –¥–Ω–µ–π</p>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {[
                      { name: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏', icon: 'Footprints', unlocked: true },
                      { name: 'ML –º–∞—Å—Ç–µ—Ä', icon: 'Award', unlocked: true },
                      { name: '–ö–æ–¥ –Ω–∏–Ω–¥–∑—è', icon: 'Zap', unlocked: false },
                      { name: '–ò–ò –≥—É—Ä—É', icon: 'Crown', unlocked: false }
                    ].map((achievement, index) => (
                      <div key={index} className={`flex items-center space-x-3 p-2 rounded-lg ${
                        achievement.unlocked ? 'bg-muted' : 'bg-muted/50 opacity-50'
                      }`}>
                        <Icon name={achievement.icon as any} size={20} className={achievement.unlocked ? 'text-yellow-600' : 'text-muted-foreground'} />
                        <span className="text-sm font-medium">{achievement.name}</span>
                        {achievement.unlocked && <Icon name="Check" size={16} className="text-green-600 ml-auto" />}
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        )}
      </main>
    </div>
  )
}

export default Index